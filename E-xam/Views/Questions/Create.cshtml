
@using ExamDomain.Model
@model Question

@{
    ViewBag.Title = "Create";
}

<h2>Create question</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <section>
            @*<h4>Question</h4>*@
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TimeToRespond, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    @Html.EditorFor(model => model.TimeToRespond, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TimeToRespond, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Points, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Points, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" id="QuestionTypeRadioButtons">
                    @Html.RadioButton("QuestionType", "Open", new { id = "IsOpenRadioButton" }) Open
                    @Html.RadioButton("QuestionType", "Closed", new { id = "IsClosedRadioButton" }) Closed
                </div>
            </div>

            @*<div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.EditorFor(q => ((ClosedQuestion)q).AnswerChoices)
                </div>
            </div>*@

         </section>

        <section id="ClosedQuestionSection">

        </section>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts
{
    <script src="~/Scripts/Custom/ClosedQuestion.js"></script>
}


