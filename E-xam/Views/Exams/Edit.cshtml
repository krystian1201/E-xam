@using ExamDomain.Model
@using Utils.HtmlHelpers
@model ExamDomain.Model.ExamViewModel

@{
    ViewBag.Title = "Edit exam";
}

<h2>Edit exam</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>Exam</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Course.Name, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CourseID, new SelectList(Model.AvailableCourses, "Key", "Value", Model.CourseID),
                    new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.Course.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Place, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
            </div>
        </div>
        
        
        <div class="form-group col-md-offset-2">
            <table id="questionsTable" class="table">
                <tr>
                    <th style="text-align: center">
                        @Html.Label("Question")
                    </th>
                    <th>
                        @Html.Label("Time")
                    </th>
                    <th>
                        @Html.Label("Points")
                    </th>
                    <th>
                        @Html.Label("Type")
                    </th>
                </tr>
                
                @*@Html.EditorFor(e => e.Questions, "QuestionInExam")*@
                @Html.EditorFor(e => e.QuestionViewModels)

            </table>

            @*<p>
                @Html.CreateAddLink("Add question", "#questionsTable", ".question", "Questions",
                    typeof(Question), "QuestionInExam")

            </p>*@
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-1">
                @Html.ActionLink("Cancel", "Details", "Exams", new { id = Model.ID }, new { @class = "btn btn-default" })
            </div>
            <div>
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
